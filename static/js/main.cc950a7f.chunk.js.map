{"version":3,"sources":["HeaderBar/Nav.jsx","HeaderBar/HeaderBar.jsx","Footer/Footer.jsx","Page/Page.jsx","App.js","serviceWorker.js","index.js"],"names":["MenuItem","props","isOpen","href","title","children","Nav","Component","constructor","super","toggleMenuOpen","this","setState","menuOpen","state","render","type","id","onChange","tabIndex","aria-haspopup","htmlFor","className","alt","src","HeaderBar","filterParagraph","rubric","filter","slug","troupe","role","year","upcoming","onClick","clearFilter","Footer","PlayDetails","lazy","Page","queryString","parse","window","location","search","refresh","slugHandler","history","push","troupeHandler","yearHandler","e","currentTarget","textContent","substr","upcomingHandler","roleHandler","troupeRubric","filterPlays","jsonData","play","bool","isInOeuvre","slugBool","Array","isArray","includes","troupeBool","byArraySlug","map","troupeSlug","index","yearBool","datesAsText","roleBool","filterRole","myRoles","date","Date","getTime","upcomingFilterBool","upcomingBool","epochLastPerformance","newFilter","reverse","numPlays","length","mappedPlays","key","epochFirstPerformance","datePrecision","verb","byArray","synopsis","myActingRole","mySongsLyricized","exampleLyric","posterOrientation","cloudinary","mappedPlaysWithLazyLoading","fallback","class","roles","toLowerCase","join","years","troupeFound","playFound","find","findIndex","troupeIndex","name","titles","App","basename","component","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cc950a7f.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './Nav.css';\r\nimport '../App.css';\r\n\r\n//// The menu-items should not be interactive when the menu is closed (or closing).\r\n//// This is achieved by rendering each item with an <a> element if the menu is open,\r\n//// and a <span> element if closed.\r\nconst MenuItem = (props) => {\r\n    if (props.isOpen) {\r\n        return <a href={props.href} title={props.title}>{props.children}</a>\r\n    }\r\n    else {\r\n        return <span>{props.children}</span>\r\n    }\r\n}\r\n\r\nclass Nav extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            menuOpen: false\r\n        }\r\n    }\r\n    toggleMenuOpen = () => {\r\n        this.setState({menuOpen: !this.state.menuOpen});\r\n    }\r\n\r\n    render() {\r\n        let menuOpen = this.state.menuOpen;\r\n        return (\r\n            <nav>\r\n                {/* Checkbox is visually hidden but operated via the label. \r\n                It determines whether the ul is hidden or not. */}\r\n                <input\r\n                    type=\"checkbox\"\r\n                    id=\"nav-open-toggler\"\r\n                    onChange={this.toggleMenuOpen}\r\n                    tabIndex=\"0\"\r\n                    aria-haspopup=\"true\"\r\n                />\r\n                <label htmlFor=\"nav-open-toggler\" title=\"Open or close the nav menu\">\r\n                    <img className=\"header-icon\" alt=\"Duncan’s fulmar icon. Click to open or close the nav menu\" src=\"https://www.duncanritchie.co.uk/favicon-96x96.png\"/>\r\n                </label>\r\n                <ul>\r\n                    <li>\r\n                        <MenuItem isOpen={menuOpen} href=\"https://www.duncanritchie.co.uk/\" title=\"Duncan Ritchie’s portfolio\">Duncan Ritchie’s website</MenuItem>\r\n                    </li>\r\n                    <li>\r\n                        <MenuItem isOpen={menuOpen} href=\"https://www.github.com/DuncanRitchie/\" title=\"Duncan Ritchie — GitHub\">\r\n                            <i className=\"fab fa-github\"></i>My GitHub page\r\n                        </MenuItem>\r\n                    </li>\r\n                    <li>\r\n                        <MenuItem isOpen={menuOpen} href=\"https://www.linkedin.com/in/duncan-ritchie-uk/\" title=\"Duncan Ritchie — LinkedIn\">\r\n                            <i className=\"fab fa-linkedin\"></i>My LinkedIn page\r\n                        </MenuItem>\r\n                    </li>\r\n                    <li>\r\n                        <MenuItem isOpen={menuOpen} href=\"https://theatreinthequarter.co.uk/\" title=\"Theatre in the Quarter’s website\">\r\n                            Theatre in the Quarter’s website\r\n                        </MenuItem>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Nav\r\n","import React from 'react';\nimport Nav from './Nav.jsx';\nimport './HeaderBar.css';\n\nconst HeaderBar = (props) => {\n    return (\n        <header>\n            <Nav />\n            <h1 className=\"header-heading\">My œuvre with Theatre in the Quarter and related groups</h1>\n            <p className=\"filter-paragraph\">\n                {props.filterParagraph}. {props.rubric}&ensp;\n                {props.filter.slug === \"\" && \n                props.filter.troupe === \"\" && \n                props.filter.role === \"\" && \n                props.filter.year === \"\" && \n                !props.filter.upcoming ? null :\n                <button className=\"clear-filter\" title=\"Clear filter\" onClick={props.clearFilter}>Clear filter</button>}\n            </p>\n        </header>\n    )\n}\nexport default HeaderBar","import React from 'react';\nimport './Footer.css';\n\nconst Footer = (props) => {\n    return (\n        <footer>\n            <ul>\n                <li>\n                    Made by Duncan Ritchie using React.js.\n                </li>\n                <li>\n                    <a href=\"https://www.duncanritchie.co.uk\" title=\"Duncan Ritchie’s website\">My&nbsp;website</a>.\n                </li>\n                <li>\n                    <a href=\"https://theatreinthequarter.co.uk\" title=\"Theatre in the Quarter’s website\">TiQ’s&nbsp;website</a>.\n                </li>\n            </ul>\n        </footer>\n    )\n}\nexport default Footer","import React, { Component, lazy, Suspense } from 'react';\nimport queryString from \"query-string\";\nimport jsonData from \"../data.json\";\nimport HeaderBar from \"../HeaderBar/HeaderBar\";\nimport Footer from \"../Footer/Footer\";\nimport '../App.css';\nconst PlayDetails = lazy(() => import(\"../Play/PlayDetails\"));\n\nconst Loading = () => <section class=\"play-details\"><p>Loading...</p></section>;\n\nclass Page extends Component {\n  state = {\n    filter: {\n      slug: queryString.parse(window.location.search).slug || \"\",\n      troupe: queryString.parse(window.location.search).troupe || \"\",\n      year: queryString.parse(window.location.search).year || \"\",\n      role: queryString.parse(window.location.search).role || \"\",\n      upcoming: queryString.parse(window.location.search).upcoming || false\n    }\n  }\n\n  refresh = () => {\n        this.setState({\n            filter: {\n            slug: queryString.parse(window.location.search).slug || \"\",\n            troupe: queryString.parse(window.location.search).troupe || \"\",\n            year: queryString.parse(window.location.search).year || \"\",\n            role: queryString.parse(window.location.search).role || \"\",\n            upcoming: queryString.parse(window.location.search).upcoming || false\n            }\n        })\n      }\n\n  slugHandler = (slug) => {\n    this.props.history.push(\"/?slug=\"+slug)\n    this.refresh()\n  }\n\n  troupeHandler = (troupe) => {\n    this.props.history.push(\"/?troupe=\"+troupe)\n    this.refresh()\n  }\n\n  yearHandler = (e) => {\n    this.props.history.push(\"/?year=\"+e.currentTarget.textContent.substr(0,4))\n    this.refresh()\n  }\n\n  upcomingHandler = () => {\n    this.props.history.push(\"/?upcoming=true\")\n    this.refresh()\n  }\n\n  roleHandler = (e) => {\n    let role = \"\"\n    switch (e.currentTarget.textContent) {\n      case \"poster-designer\":\n        role = \"poster-designer\"\n        break;\n      case \"programme-designer\":\n        role = \"programme-designer\"\n        break;\n      case \"lyricist\":\n        role = \"lyricist\"\n        break;\n      case \"photographer\":\n        role = \"photographer\"\n        break;\n      case \"assistant-director\":\n        role = \"assistant-director\"\n        break;\n      case \"poster co-designer (with illustration by Alison Pitt)\":\n        role = \"co-designer\"\n        break;\n      case \"actor\":\n        role = \"actor\"\n        break;\n      default:\n        role = \"\"\n    }\n    this.props.history.push(\"/?role=\"+role)\n    this.refresh()\n  }\n\n  clearFilter = () => {\n    this.props.history.push(\"/?\")\n    this.refresh()\n  }\n\n  troupeRubric = () => {\n    let troupeSlug = this.state.filter.troupe\n    let rubric = \"\"\n    switch (troupeSlug) {\n      case \"jigsaw-music-theatre\":\n        rubric = \"Jigsaw were founded in 1991 and now have about two dozen members aged seven to twelve.\"\n        break\n      case \"quartz-youth-theatre\":\n        rubric = \"Established in 2013, Quartz are the arm of TiQ for teenage thespians, with around 22 current members.\"\n        break\n      case \"rewind-youth-theatre\":\n        rubric = \"Rewind are primary-schoolchildren in the Chester suburb of Blacon, co-managed by TiQ and Cheshire Dance.\"\n        break\n      case \"handbag-of-harmonies\":\n        rubric = \"A Handbag of Harmonies are a choir of several dozen women from the Chester area.\"\n        break\n      case \"garden-quarter-association\":\n        rubric = \"The Garden Quarter is the suburb of Chester that TiQ are based in.\"\n        break\n      case \"chester-mystery-plays-cast\":\n        rubric = \"The Chester Mystery Plays are a huge feat every five years to retell Bible stories at Chester Cathedral; individual plays have been reprised in the city’s amphitheatre.\"\n        break\n      case \"theatre-in-the-quarter-adults\":\n        rubric = \"TiQ was founded in 2005 to provide the residents of Chester with theatrical experiences alongside professional actors, as well as to run the children’s group Jigsaw (and later Quartz and Rewind).\"\n        break\n      default:\n        rubric = \"\"\n    }\n    return (rubric)\n  }\n\n  filterPlays = () => {\n    let filteredPlays = jsonData.filter(play=>{\n      // bool is what will determine whether a play gets displayed or not\n      let bool = play.isInOeuvre;\n      if (this.state.filter.slug) {\n        let slugBool = false\n        if (Array.isArray(this.state.filter.slug)) {\n          slugBool = this.state.filter.slug.includes(play.slug)\n        }\n        else {\n          slugBool = play.slug===this.state.filter.slug\n        }\n        bool = bool && slugBool\n      }\n      if (this.state.filter.troupe) {\n        let troupeBool = false;\n        play.byArraySlug.map((troupeSlug,index)=>{\n          if (this.state.filter.troupe.includes(troupeSlug)) {\n            troupeBool = true\n          }\n          return troupeBool\n        })\n        bool = bool && troupeBool\n      }\n      if (this.state.filter.year) {\n        let yearBool = false\n        if (Array.isArray(this.state.filter.year)) {\n          yearBool = this.state.filter.year.includes(play.datesAsText.substr(0,4))\n        }\n        else {\n          yearBool = this.state.filter.year === play.datesAsText.substr(0,4) \n        }\n        bool = bool && yearBool\n      }\n      if (this.state.filter.role) {\n        let roleBool = false\n        if (Array.isArray(this.state.filter.role)) {\n          this.state.filter.role.map(filterRole => {\n            roleBool = roleBool || play.myRoles.includes(filterRole)\n            return roleBool\n          })\n        }\n        else {\n          roleBool = play.myRoles.includes(this.state.filter.role)\n        }\n        bool = bool && roleBool\n      }\n      if (this.state.filter.upcoming) {\n        let date = new Date().getTime()/1000\n        let upcomingFilterBool = true;\n        let upcomingBool = true\n        if (this.state.filter.upcoming === \"false\") {\n          upcomingBool = true;\n          upcomingFilterBool = false;\n        }\n        else if (Array.isArray(this.state.filter.upcoming)) {\n          upcomingFilterBool = false\n          this.state.filter.upcoming.map(upcoming => {\n            upcomingFilterBool = upcomingFilterBool || upcoming===\"true\"\n            return upcomingFilterBool\n          })\n          if (upcomingFilterBool) {\n            upcomingBool = upcomingBool && date<play.epochLastPerformance\n          }\n          else {\n            upcomingBool = true\n          }\n        }\n        else {\n          upcomingBool = date<play.epochLastPerformance\n        }\n        if (this.state.filter.upcoming !== upcomingFilterBool) {\n          let newFilter = {\n            role: this.state.filter.role,\n            slug: this.state.filter.slug,\n            troupe: this.state.filter.troupe,\n            upcoming: upcomingFilterBool,\n            year: this.state.filter.year\n          }\n          this.setState({filter: newFilter})\n        }\n        bool = bool && upcomingBool\n      }\n      return bool\n    })\n    return filteredPlays.reverse()\n  }\n\n  render() {\n    // Let’s calculate the number of plays to display.\n    let numPlays = this.filterPlays().length;\n    // Let’s create a PlayDetails element for every play.\n    let mappedPlays = this.filterPlays().map((play, index) => {\n      return (\n          <PlayDetails \n              key={index} \n              title={play.title}\n              slug={play.slug}\n              epochFirstPerformance={play.epochFirstPerformance}\n              epochLastPerformance={play.epochLastPerformance}\n              datePrecision={play.datePrecision}\n              datesAsText={play.datesAsText}\n              verb={play.verb}\n              byArray={play.byArray}\n              byArraySlug={play.byArraySlug}\n              synopsis={play.synopsis}\n              myRoles={play.myRoles}\n              myActingRole={play.myActingRole}\n              mySongsLyricized={play.mySongsLyricized}\n              exampleLyric={play.exampleLyric}\n              posterOrientation={play.posterOrientation}\n              cloudinary={play.cloudinary}\n              slugHandler={this.slugHandler}\n              troupeHandler={this.troupeHandler}\n              yearHandler={this.yearHandler}\n              roleHandler={this.roleHandler}\n              upcomingHandler={this.upcomingHandler}\n              numPlays={numPlays}\n        />\n      )\n    })\n    // Wrap a <Suspense> element around it to allow for a Loading state.\n    let mappedPlaysWithLazyLoading = <Suspense fallback={Loading()}>{mappedPlays}</Suspense>;\n    // Let’s make our filterParagraph.\n    let filterParagraph = \"\";\n    // The first part of filterParagraph depends on the number of plays displayed.\n    if (numPlays === jsonData.filter(play=>{return play.isInOeuvre}).length) {\n      filterParagraph = `Showing all ${numPlays} items. Click a date, troupe, role, title, or “upcoming” sticker to set a filter`\n    }\n    else if (numPlays > 1) {\n      filterParagraph = `Filtered to ${numPlays} productions`\n    }\n    else if (numPlays === 1) {\n      filterParagraph = \"Filtered to one production\"\n    }\n    else {\n      filterParagraph = `Click “Clear filter” — there are no productions`\n    }\n    // The latter parts of filterParagraph depends on the filter set.\n    //If there is a role/s in the filter...\n    if (this.state.filter.role) {\n      let roles = this.state.filter.role\n      if (Array.isArray(this.state.filter.role)) {\n        roles = this.state.filter.role.map(role => {return role.toLowerCase()}).join(\" or \")\n      }\n      filterParagraph += ` where I was ${roles.toLowerCase()}`\n    }\n    // If there is a year/s in the filter...\n    if (this.state.filter.year) {\n      let years = this.state.filter.year\n      if (Array.isArray(years)) {\n        years = years.join(\" or \")\n      }\n      filterParagraph += ` performed in ${years}`\n    }\n    // If there is a troupe/s in the filter...\n    if (this.state.filter.troupe) {\n      // troupeFound is the string that will be added to filterParagraph to represent the troupe(s).\n      let troupeFound = this.state.filter.troupe;\n      // This is what happens if the query is only one troupe.\n      let playFound = jsonData.find(play=>{\n        return play.byArraySlug.includes(this.state.filter.troupe)\n        });\n      if (playFound) {\n        troupeFound = playFound.byArray[playFound.byArraySlug.findIndex(troupe=>{return troupe===this.state.filter.troupe})]\n      }\n      // This is what happens if the query contains multiple troupes.\n      else if (Array.isArray(this.state.filter.troupe)) {\n        let troupeNamesArray = this.state.filter.troupe.map((troupeSlug)=>{\n          if (jsonData.find(play=>{return play.byArraySlug.includes(troupeSlug)})) {\n            playFound = jsonData.find(play=>{return play.byArraySlug.includes(troupeSlug)});\n            let troupeIndex = playFound.byArraySlug.findIndex(troupe=>{return troupe===troupeSlug})\n            let troupeName = playFound.byArray[troupeIndex]\n            return (troupeName)\n          }\n          else {\n            return null\n          }\n        })\n        troupeFound = troupeNamesArray.filter((name)=>{return name!= null}).join(\" or \")\n      }\n      // Let’s add whatever we have for the troupes into filterParagraph\n      filterParagraph += ` by ${troupeFound}`\n    }\n    // If there is a slug in the filter...\n    if (this.state.filter.slug) {\n      let titles = this.state.filter.slug\n      // If titles is a single slug in the Json data, the corresponding title is returned.\n      if (jsonData.find(play=>{return play.slug===titles})) {\n        titles = jsonData.find(play=>{return play.slug===titles}).title\n      }\n      // If titles is not a single slug, or not in the Json data...\n      else {\n        // If titles is an array of slugs, we want to return a title for every slug.\n        if (Array.isArray(titles)) {\n          titles = titles.map(slug => {\n            if (jsonData.find(play=>{return play.slug===slug})) {\n              return jsonData.find(play=>{return play.slug===slug}).title\n            }\n            else {\n              return null\n            }\n          }).filter(title=>{return title!=null}).join(\"” or “\")\n        }\n        // If titles is a single incorrect slug, we don’t do anything here.\n      }\n      filterParagraph += ` entitled “${titles}”`\n    }\n    // If there is upcoming:true in the filter...\n    if (this.state.filter.upcoming) {\n      filterParagraph += ` that ${numPlays===1 ? \"has\" : \"have\"} not been performed yet`\n    }\n    // Let’s put everything together into Page.\n    return (\n      <div className=\"Page\">\n        <HeaderBar filter={this.state.filter} filterParagraph={filterParagraph} rubric={this.troupeRubric()} clearFilter={this.clearFilter}/>\n        {mappedPlaysWithLazyLoading}\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default Page","import React, { Component } from 'react';\nimport {BrowserRouter, Route} from \"react-router-dom\";\nimport Page from \"./Page/Page\"\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter basename=\"/tiq-oeuvre\">\n        <Route component={Page}/>\n      </BrowserRouter>\n    )\n  }\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let’s check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();"],"sourceRoot":""}